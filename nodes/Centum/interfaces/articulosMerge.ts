// Generated by https://quicktype.io

export interface IMergeArticulos {
	json: JSON;
	pairedItem: PairedItem;
}

export interface JSON {
	IdArticulo: number;
	Codigo: string;
	CodigoAuxiliar: string;
	CodigoPropioProveedor: string;
	Nombre: string;
	NombreFantasia: string;
	Rubro: RubroMerge;
	SubRubro: SubRubroMerge;
	CategoriaArticulo: CategoriaArticuloMerge | null;
	SociedadArticulo: SociedadArticuloMerge;
	MarcaArticulo: MarcaArticuloMerge;
	Habilitado: boolean;
	ActivoWeb: boolean;
	ImprimeLista: boolean;
	Ranking: null;
	CategoriaImpuestoIVA: CategoriaImpuestoIVAMerge;
	PorcentajeDescuento: number;
	CostoReposicion: number;
	SegundoControlStock: number;
	UnidadNivel1: number;
	UnidadNivel2: number;
	Masa: number;
	MasaEspecifico: number;
	Volumen: number;
	Alto: number;
	Largo: number;
	Ancho: number;
	EsPesable: boolean;
	InformaTropa: boolean;
	Comision: ComisionMerge;
	ImpuestoInterno: number;
	Precio: number;
	PreciosPorCantidad: any[];
	PorcentajeDescuentoMaximo: number;
	PorcentajesDescuentoMaximoPorCantidad: null;
	FechaUltimaActualizacionPrecio: null | string;
	PrecioAnterior: number;
	DescuentoPromocion: number;
	NoAplicaBonificacionCliente: boolean;
	IdTipoDescuentoPromocion: number;
	IdClaseDescuento: number;
	ExistenciasSucursal: number;
	ExistenciasTotal: number;
	StockComprometido: number;
	StockDisponible: number;
	CantidadPedidosVenta: number;
	CantidadOrdenesCompra: number;
	PoseePrecioPorCantidad: null;
	PoseePorcentajeDescuentoPromocion: null;
	PoseePorcentajeDescuentoPromocionPorUnidades: null;
	PoseePorcentajeDescuentoPromocionPorValores: null;
	TipoRelacionArticulo: null;
	Observaciones: string;
	Detalle: string;
	CumplePoliticaStock: null;
	CantidadArticulosGrupoArticulo: number;
	CantidadImagenesArticulo: number;
	CantidadPrecioSugerido: number;
	NumeroDespacho: string;
	GrupoArticulo: GrupoArticuloMerge | null;
	AtributosArticulo: AtributosArticuloMerge[];
	DescuentosPorPromocionPorUnidades: any[];
	DescuentosPorPromocionPorValor: any[];
	Videos: any[];
	PublicacionesTiendasOnline: any[];
	Tags: any[];
	IdArticuloAsociado: number;
	OperadorPlataformaB2B2C: null;
	CodigoBarrasFacturacionElectronica: string;
	UnidadNivelDefectoVentas: number;
	ArticulosCombo: ArticulosComboMerge[];
	FactorConversion: number;
	UnidadMaximaVenta: number;
	UnidadMinimaVenta: number;
	ExistenciasSucursales: number;
	images: Data[] | null;
}

export interface ArticulosComboMerge {
	IdArticulo: number;
	Cantidad: number;
	Descuento: number;
}

export interface Data {
	data: BinaryData;
}

export interface BinaryData {
	mimeType: string;
	fileType: string;
	fileExtension: string;
	data: string;
	fileSize: string;
	fileName: string;
}
export interface AtributosArticuloMerge {
	IdAtributoArticulo: number;
	Nombre: AtributosArticuloNombreMerge;
	Abreviatura: AbreviaturaMerge;
	IdAtributoArticuloValor: number;
	Valor: string;
}

export enum AbreviaturaMerge {
	Col = 'COL',
	Med = 'MED',
}

export enum AtributosArticuloNombreMerge {
	Color = 'COLOR ',
	Medidas = 'MEDIDAS',
}

export interface CategoriaArticuloMerge {
	IdCategoriaArticulo: number;
	Codigo: string;
	Nombre: string;
}

export interface CategoriaImpuestoIVAMerge {
	IdCategoriaImpuestoIVA: number;
	Codigo: string;
	Nombre: 'IVA 21.00';
	Tasa: number;
}

export interface ComisionMerge {
	IdComision: number;
}

export interface GrupoArticuloMerge {
	IdGrupoArticulo: number;
	Nombre: string;
	Detalle: DetalleMerge;
}

export enum DetalleMerge {
	AlfombraRhoneDib = 'ALFOMBRA RHONE DIB',
	Empty = '',
	R01Sr0108 = 'R01SR0108',
}

export interface MarcaArticuloMerge {
	IdMarcaArticulo: number;
	Codigo: CodigoMerge;
	Nombre: CodigoMerge;
}

export enum CodigoMerge {
	Captor = 'Captor',
	CodigoCaptor = 'Captor ',
	CodigoEnya = 'Enya',
	Dib = 'Dib',
	ElEspartano = 'El Espartano',
	Enya = 'ENYA',
	Exito = 'Exito',
	Francavilla = 'Francavilla',
	Muresco = 'Muresco',
	Rielamericano = 'Rielamericano',
	Wepel = 'Wepel',
}

export interface RubroMerge {
	IdRubro: number;
	Codigo: RubroCodigoMerge;
	Nombre: RubroNombreMerge;
}

export enum RubroCodigoMerge {
	R01 = 'R01',
	R02 = 'R02',
	R03 = 'R03',
	R04 = 'R04',
	R05 = 'R05',
	R06 = 'R06',
	R07 = 'R07',
}

export enum RubroNombreMerge {
	Alfombras = 'ALFOMBRAS',
	Cortinas = 'CORTINAS',
	Deco = 'DECO',
	EnviosViaticosYEmbalajes = 'ENVIOS, VIATICOS Y EMBALAJES',
	ManoDeObra = 'MANO DE OBRA',
	Revestimientos = 'REVESTIMIENTOS',
	Telas = 'TELAS',
}

export interface SociedadArticuloMerge {
	IdSociedadArticulo: number;
	Codigo: string;
	Nombre: SociedadArticuloNombreMerge;
}

export enum SociedadArticuloNombreMerge {
	SociedadDeArtículoDefecto = 'Sociedad de Artículo Defecto',
}

export interface SubRubroMerge {
	IdSubRubro: number;
	Codigo: string;
	Nombre: SubRubroNombreMerge;
}

export enum SubRubroNombreMerge {
	Adhesivos = 'ADHESIVOS',
	Alfombras = 'ALFOMBRAS',
	BorlasYComplementos = 'BORLAS Y COMPLEMENTOS',
	Carpetas = 'CARPETAS',
	Complementos = 'COMPLEMENTOS',
	Confecciones = 'CONFECCIONES ',
	CortinasAmericanas = 'CORTINAS AMERICANAS ',
	CortinasBandasVerticales = 'CORTINAS BANDAS VERTICALES',
	CortinasRipplefold = 'CORTINAS RIPPLEFOLD',
	CortinasRoller = 'CORTINAS ROLLER',
	CortinasStandard = 'CORTINAS STANDARD',
	CortinasTradicionalesAMedida = 'CORTINAS TRADICIONALES A MEDIDA',
	Embalajes = 'EMBALAJES',
	Envios = 'ENVIOS',
	InstalacionCortinas = 'INSTALACION CORTINAS',
	InstalacionRevestimientos = 'INSTALACION REVESTIMIENTOS',
	InstalacionesVarias = 'INSTALACIONES VARIAS',
	Papeles = 'PAPELES',
	Pisos = 'PISOS',
	Preventivas = 'PREVENTIVAS',
	RevestimientosDeParedes = 'REVESTIMIENTOS DE PAREDES',
	RevestimientosVarios = 'REVESTIMIENTOS VARIOS',
	SistemasYMecanismos = 'SISTEMAS Y MECANISMOS',
	TelasParaCortinas = 'TELAS PARA CORTINAS',
	Textiles = 'TEXTILES',
}

export interface PairedItem {
	item: number;
}

export interface BinaryMerge {
	data: IDataBinary;
}

export interface IDataBinary {
	mimeType: string;
	fileType: string;
	fileExtension: string;
	data: string;
	fileSize: string;
	fileName: string;
}
